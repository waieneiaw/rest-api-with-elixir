version: "3.8"

services:
  elixir:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        # Elixir Version: 1.9, 1.10, 1.10.4, ...
        VARIANT: "1.12.3"
        # Phoenix Version: 1.4.17, 1.5.4, ...
        PHOENIX_VERSION: "1.6.2"
        # Node Version: 12, 14, ...
        NODE_VERSION: "16"

    volumes:
      - ..:/workspace:cached
    # Runs app on the same network as the database container, allows "forwardPorts" in devcontainer.json function.
    # network_mode: service:db
    network_mode: service:mongodb

    # Overrides default command so things don't shut down after the process ends.
    command: sleep infinity

  db:
    image: postgres:latest
    restart: unless-stopped
    volumes:
      - postgres-data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: app

  mongodb:
    image: mongo:5.0.9
    container_name: mongodb
    ports:
      - 27017:27017
    restart: unless-stopped
    healthcheck:
      test: test $$(echo "rs.initiate({_id:\"rs0\",members:[{_id:0,host:\"localhost:27017\"}]}).ok || rs.status().ok" | mongo --port 27017 --quiet) -eq 1
      interval: 10s
      start_period: 30s
    command: "mongod --bind_ip_all --replSet rs0"

  mongo-express:
    image: mongo-express:0.54.0
    container_name: mongo_express
    restart: always
    ports:
      - 58081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: password
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      - mongodb

volumes:
  postgres-data:
